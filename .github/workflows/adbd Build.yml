name: adbd Build
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: "MANIFEST_URL (if want to use SSH keys, use git@github.com:XXXXX)"
        required: true
        default: "https://android.googlesource.com/platform/manifest"
      MANIFEST_BRANCH:
        description: "MANIFEST_BRANCH"
        required: true
        default: "android-10.0.0_r1"
      DEVICE_ARCH:
        description: "DEVICE_ARCH"
        required: true
        default: "arm64"
      DEBUG:
        description: "Give me a shell to customize my adbd"
        required: true
        default: false
        type: boolean
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Display Run Parameters
        run: |
          echo "::group::User Environment Variables"
          echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
          echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
          echo "Device Arch: ${{ github.event.inputs.DEVICE_ARCH }}"
          echo "::endgroup::"

      - name: Print free space
        run: df -h

      # Cleanup The Actions Workspace Using Custom Composite Run Actions
      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main
        # That's it! Now use your normal steps

      - name: Print free space
        run: df -h

      - name: Prepare the environment
        run: |
          sudo apt update
          sudo apt -y upgrade
          sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python3

      - name: Install OpenJDK
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup SSH Keys
        if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') }}
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install repo
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

      - name: Initialize repo
        run: |
          mkdir workspace
          cd workspace
          echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
          repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        id: pwd

      - name: Repo Sync
        run: |
          repo sync -j$(nproc --all) --force-sync
        working-directory: workspace

      - name: Print free space
        run: df -h

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      #    - name: Switch to Python2
      #      run: |
      #        sudo apt -y install python
      #        sudo rm -rf /usr/bin/python
      #        sudo ln -s /usr/bin/python2 /usr/bin/python
      #        # sudo ln -s /usr/bin/python3 /usr/bin/python3
      #      continue-on-error: true

      - name: Remove default adbd code
        run: |
          rm -Rf workspace/system/core/adb

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: workspace/system/core/adb

      - name: Tmate SSH - Customize your adbd
        if: ${{ inputs.DEBUG }}
        uses: mxschmitt/action-tmate@v3

      - name: Building adbd
        run: |
          export DISABLE_WERROR=true
          export WERROR=
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch aosp_${{ github.event.inputs.DEVICE_ARCH }}-eng && make clean && make adbd -j$(nproc --all)
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Output link command
        if: always()
        run: |
          source build/envsetup.sh
          ninja -t commands out/target/product/generic_arm64/system/bin/adbd
        working-directory: ${{ steps.pwd.outputs.workspace-folder }}

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            workspace/out/target/product/generic_arm64/root/sbin/adbd
            workspace/out/target/product/generic_arm64/system/bin/adbd
          name: ${{ github.event.inputs.MANIFEST_BRANCH }}-${{ github.event.inputs.DEVICE_ARCH }}-${{ github.run_id }}
          tag_name: ${{ github.run_id }}
          body: |
            Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
            Arch: ${{ github.event.inputs.DEVICE_ARCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: workspace/out/target/product/generic_arm64/system

      - name: Upload all output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: intermediates
          path: workspace/out
